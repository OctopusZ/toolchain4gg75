find_program(CCACHE_FOUND ccache)

if(CCACHE_FOUND)
    message(STATUS "Found ccache: ${CCACHE_FOUND}")
    set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE "${CCACHE_FOUND}")
endif(CCACHE_FOUND)

if("${CMAKE_C_COMPILER}" STREQUAL "")
    if("${CMAKE_HOST_SYSTEM_NAME}" STREQUAL "Darwin")
        message(STATUS "Platform: Darwin")
        set(TOOLCHAIN_PATH ${CMAKE_CURRENT_LIST_DIR}/macOS/bin/riscv-none-embed-)
        set(CMAKE_C_COMPILER ${TOOLCHAIN_PATH}gcc)
        set(CMAKE_CXX_COMPILER ${TOOLCHAIN_PATH}g++)
        set(CMAKE_ASM_COMPILER ${TOOLCHAIN_PATH}gcc)
        set(CMAKE_AR ${TOOLCHAIN_PATH}ar)
        set(CMAKE_OBJCOPY ${TOOLCHAIN_PATH}objcopy)
        set(CMAKE_OBJDUMP ${TOOLCHAIN_PATH}objdump)
        set(SIZE ${TOOLCHAIN_PATH}size)
    elseif("${CMAKE_HOST_SYSTEM_NAME}" STREQUAL "Linux")
        message(STATUS "Platform: Linux")
        set(TOOLCHAIN_PATH ${CMAKE_CURRENT_LIST_DIR}/Linux/bin/riscv-none-embed-)
        set(CMAKE_C_COMPILER ${TOOLCHAIN_PATH}gcc)
        set(CMAKE_CXX_COMPILER ${TOOLCHAIN_PATH}g++)
        set(CMAKE_ASM_COMPILER ${TOOLCHAIN_PATH}gcc)
        set(CMAKE_AR ${TOOLCHAIN_PATH}ar)
        set(CMAKE_OBJCOPY ${TOOLCHAIN_PATH}objcopy)
        set(CMAKE_OBJDUMP ${TOOLCHAIN_PATH}objdump)
        set(SIZE ${TOOLCHAIN_PATH}size)
    elseif("${CMAKE_HOST_SYSTEM_NAME}" STREQUAL "Windows")
        message(STATUS "Platform: Windows")
        set(TOOLCHAIN_PATH ${CMAKE_CURRENT_LIST_DIR}/Windows/bin/riscv-none-embed-)
        set(CMAKE_C_COMPILER ${TOOLCHAIN_PATH}gcc.exe)
        set(CMAKE_CXX_COMPILER ${TOOLCHAIN_PATH}g++.exe)
        set(CMAKE_ASM_COMPILER ${TOOLCHAIN_PATH}gcc.exe)
        set(CMAKE_AR ${TOOLCHAIN_PATH}ar.exe)
        set(CMAKE_OBJCOPY ${TOOLCHAIN_PATH}objcopy.exe)
        set(CMAKE_OBJDUMP ${TOOLCHAIN_PATH}objdump.exe)
        set(SIZE ${TOOLCHAIN_PATH}size.exe)
    endif()
endif()